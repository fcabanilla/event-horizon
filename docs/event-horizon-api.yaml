openapi: 3.0.0
info:
  title: Event Management System API
  description: API para gestionar eventos y registros de usuarios.
  version: 1.0.0
servers:
  - url: http://localhost:8000/api/v1
    description: Local Development Server
paths:
  /users:
    get:
      summary: Obtener todos los usuarios
      tags:
        - Users
      responses:
        '200':
          description: Lista de usuarios
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Crear un nuevo usuario
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInput'
      responses:
        '201':
          description: Usuario creado con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /users/{userId}:
    get:
      summary: Obtener detalles de un usuario por ID
      tags:
        - Users
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Detalles del usuario
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    put:
      summary: Actualizar un usuario existente
      tags:
        - Users
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInput'
      responses:
        '200':
          description: Usuario actualizado con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    delete:
      summary: Eliminar un usuario
      tags:
        - Users
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Usuario eliminado con éxito

  /events:
    get:
      summary: Obtener todos los eventos
      tags:
        - Events
      responses:
        '200':
          description: Lista de eventos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
    post:
      summary: Crear un nuevo evento
      tags:
        - Events
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventInput'
      responses:
        '201':
          description: Evento creado con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'

  /events/{eventId}:
    get:
      summary: Obtener detalles de un evento por ID
      tags:
        - Events
      parameters:
        - in: path
          name: eventId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Detalles del evento
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
    put:
      summary: Actualizar un evento existente
      tags:
        - Events
      parameters:
        - in: path
          name: eventId
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventInput'
      responses:
        '200':
          description: Evento actualizado con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
    delete:
      summary: Eliminar un evento
      tags:
        - Events
      parameters:
        - in: path
          name: eventId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Evento eliminado con éxito

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        email:
          type: string
          format: email
      required:
        - name
        - email

    UserInput:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
          format: password
      required:
        - name
        - email
        - password

    Event:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        date:
          type: string
          format: date
        time:
          type: string
          format: time
        place:
          type: string
      required:
        - name
        - description
        - date
        - time
        - place

    EventInput:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        date:
          type: string
          format: date
        time:
          type: string
          format: time
        place:
          type: string
      required:
        - name
        - description
        - date
        - time
        - place
